<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.github.windchopper.tools</groupId>
    <artifactId>password-drop</artifactId>
    <version>1.1</version>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>15</java.version>
        <kotlin.version>1.4.32</kotlin.version>
        <kotlin.artifacts>kotlin-stdlib, kotlin-stdlib-common, annotations, kotlin-reflect</kotlin.artifacts>
        <kotlin.ext.version>1.4.3</kotlin.ext.version>
        <kotlin.ext.artifacts>kotlinx-coroutines-core, kotlinx-coroutines-core-jvm</kotlin.ext.artifacts>
        <javafx.version>16</javafx.version>
        <javafx.artifacts>javafx-base, javafx-controls, javafx-fxml, javafx-graphics</javafx.artifacts>
        <jandex.version>2.2.3.Final</jandex.version>
        <weld.version>4.0.1.Final</weld.version>
        <jaxb.version>3.0.0</jaxb.version>
        <common.version>1.1</common.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-core</artifactId>
            <version>${kotlin.ext.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-base</artifactId>
            <version>${javafx.version}</version>
            <classifier>win</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
            <classifier>win</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
            <classifier>win</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>${javafx.version}</version>
            <classifier>win</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-base</artifactId>
            <version>${javafx.version}</version>
            <classifier>linux</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
            <classifier>linux</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
            <classifier>linux</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>${javafx.version}</version>
            <classifier>linux</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-base</artifactId>
            <version>${javafx.version}</version>
            <classifier>mac</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
            <classifier>mac</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
            <classifier>mac</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>${javafx.version}</version>
            <classifier>mac</classifier>
        </dependency>
        <dependency>
            <groupId>org.jboss</groupId>
            <artifactId>jandex</artifactId>
            <version>${jandex.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <version>${jaxb.version}</version>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>com.sun.activation</groupId>-->
<!--            <artifactId>jakarta.activation</artifactId>-->
<!--            <version>2.0.0-RC3</version>-->
<!--        </dependency>-->
        <dependency>
            <groupId>org.jboss.weld.se</groupId>
            <artifactId>weld-se-core</artifactId>
            <version>${weld.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.windchopper</groupId>
            <artifactId>common-fx</artifactId>
            <version>${common.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.windchopper</groupId>
            <artifactId>common-fx-cdi</artifactId>
            <version>${common.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.windchopper</groupId>
            <artifactId>common-cdi</artifactId>
            <version>${common.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.windchopper</groupId>
            <artifactId>common-preferences</artifactId>
            <version>${common.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.windchopper</groupId>
            <artifactId>common-util</artifactId>
            <version>${common.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test</artifactId>
            <version>${kotlin.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <sourceDirectory>src/main/kotlin</sourceDirectory>
        <plugins>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <!--suppress DifferentKotlinMavenVersion -->
                <version>${kotlin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <jvmTarget>${java.version}</jvmTarget>
                    <compilerPlugins>
                        <plugin>all-open</plugin>
                    </compilerPlugins>
                    <pluginOptions>
                        <option>all-open:annotation=jakarta.enterprise.context.ApplicationScoped</option>
                    </pluginOptions>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <executions>
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>default-testCompile</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.8</version>
                <executions>
                    <execution>
                        <id>copy-javafx</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib/javafx</outputDirectory>
                            <includeScope>runtime</includeScope>
                            <includeArtifactIds>${javafx.artifacts}</includeArtifactIds>
                            <excludeClassifiers>win, linux, mac</excludeClassifiers>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-javafx-win</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib/javafx/win</outputDirectory>
                            <includeScope>runtime</includeScope>
                            <includeArtifactIds>${javafx.artifacts}</includeArtifactIds>
                            <includeClassifiers>win</includeClassifiers>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-javafx-linux</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib/javafx/linux</outputDirectory>
                            <includeScope>runtime</includeScope>
                            <includeArtifactIds>${javafx.artifacts}</includeArtifactIds>
                            <includeClassifiers>linux</includeClassifiers>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-javafx-mac</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib/javafx/mac</outputDirectory>
                            <includeScope>runtime</includeScope>
                            <includeArtifactIds>${javafx.artifacts}</includeArtifactIds>
                            <includeClassifiers>mac</includeClassifiers>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-kotlin</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib/kotlin</outputDirectory>
                            <includeScope>runtime</includeScope>
                            <includeArtifactIds>${kotlin.artifacts}</includeArtifactIds>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-kotlin-ext</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib/kotlin/ext</outputDirectory>
                            <includeScope>runtime</includeScope>
                            <includeArtifactIds>${kotlin.ext.artifacts}</includeArtifactIds>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-rest</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <includeScope>runtime</includeScope>
                            <excludeArtifactIds>${javafx.artifacts}, ${kotlin.artifacts}, ${kotlin.ext.artifacts}</excludeArtifactIds>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>